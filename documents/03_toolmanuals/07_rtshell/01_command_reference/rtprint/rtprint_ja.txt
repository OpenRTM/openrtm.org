// Title: rtprint

** 書式
rtprint [OPTION ...] PATH:PORT [PATH:PORT ...]

** 概要
アウトポートが送るデータを標準出力に表示します。

デフォルトでは、強制停止するまで受け取った値を表示します。受け取るデータ個数を指定することや、受け取りに行く頻度、また受け取りを止めるまでの時間間を指定することができです。個数を指定したが、その時点で、その個数分のデータが準備できてない場合は準備できるまで待ち、その個数分の回数表示をします。

Pythonのネイティブな機能では表示できないデータを表示するためにはフォーマッタ関数を使うことが必要です。ユーザーもこの関数を提供することは可能です。フォーマッタ関数の入力引数は一つ (表示するべきデータ)で、例えば下記のように定義します。

 def rawpy(data):
     return data.__repr__()

ポートまでの接続はそのポートのデフォルト設定と互換性のある設定でなされれま す。

** オプション(OPTION)
 -m MODULES、--mod=MODULES
 　　　　　　　Importする必要があるPython モジュールを指定します。接続するポートのデータを表示するために必要とされている
 　　　　　　　モジュー ルがロードされていない場合、このオプションで指定してください。 モジュールとそのモジュールの __POA
 　　　　　　　のモジュールもimportします。
 -n NUMBER、--number=NUMBER
 　　　　　　　読込む回数。
 -p PATHS、--path=PATHS
 　　　　　　　モジュールのサーチパス。PythonのPYTHONPATH変数に追加されます。
 -r RATE、--rate=RATE
 　　　　　　　読みだし頻度(回/sec)。
 -t TIMEOUT、--timeout=TIMEOUT
 　　　　　　　読み込み停止するまでの時間。このオプションを使う場合、--numberを使うことはできません。
 --version　　 プログラムのバージョン番号を表示します。
 -h、--help　　ヘルプを表示します。
 -v、--verbose より詳細な情報を出力します。

** パス
rtshellはパスでRTCツリーのオブジェクトを示します。ネームサーバーとネームコンテクストはディレクトリ名として指定され、マネージャとRTコンポーネントはファイル名として指定されます。コマンドに渡したパスはrtshellの現在の作業ディレクトリを元に指定されます。(相対パスの場合)。rtshellの現在の作業ディレクトリはRTCSH_CWDという環境変数に保存されて、rtcwdというコマンドで変更できます。(現時点でrtcwdコマンドはLinux環境では動作していません)

利用できるパスはコマンド実行時に参照しているネームサーバーによって変わります。ネームサーバーが実行されているホスト名はRTCTREE_NAMESERVERSという環境変数で指定できます。また、直接ルート直下のパスとして/<ホスト名>/....のような形でネームサーバーが実行されているホストを指定できます。

例えば、/localhost/comp0.rtcはlocalhostにあるネームサーバーに登録されたcomp0.rtcというRTコンポーネントを示します。/localhost/manager/comp0.rtcはlocalhostにあるネームサーバーの下のmanagerというディレクトリに登録されたcomp0.rtcというRTコンポーネントを示します。./comp0.rtcは現在の作業ディレクトリにあるcomp0.rtcというRTコンポーネントを示します。

RTコンポーネントのポートを示す場合、パスの後にコロン（「:」）で区切って指定します。例えば、/localhost/comp0.rtc:dataはcomp0.rtcというRTコンポーネントのdataというポートを意味します。

新しいポートを作れるコマンドもあり、この場合、オプションでそれらをパスに追加できます。使えるオプションは作られるポートの名前とフォーマッタです。指定方法は以下の通りです:

 <path>:<port>.<new_port_name>#<formatter>

*** 例:
 /localhost/blurg.host_cxt/comp0.rtc:input.stuff#a_printer

新たに作られるポートの名前はstuffで、データはa_printerという関数(フォーマッター)でターミナルに表示するように指定しています。(a_printerの関数はPythonが利用可能な場所に存在する必要があります。普通はユーザーがモジュールで提供します)。作られたポートはcomp0.rtcのinputというポートに接続されます。

<new_port_name>という部分は必須ではありません。指定しない場合は"."も指定しないでください。例:

 /localhost/blurg.host_cxt/comp0.rtc:input#a_printer

<formatter>という部分は必須ではありません。書いていない場合は"."も指定しないでください。例:

 /localhost/blurg.host_cxt/comp0.rtc:input.stuff

** 環境変数
:RTCTREE_ORB_ARGS|ORBを作る時に渡す変数です。セミコロンで区切ります。必須ではありません。
:RTCTREE_NAMESERVERS|RTCツリーを作る時に参照するネームサーバーのアドレスです。アドレスをセミコロンで区切ります。リストされたアドレスはRTCツリーに追加されrtshellで参照できるようになります。ルート下のディレクトリ名としてパスで指定することもできるので必須ではありません。
:RTSH_CWD|rtshellの現在のワーキングディレクトリ。rtshellが自動的に設定します。設定しないでください。

一般的な利用ではユーザーが設定する変数はRTCTREE_NAMESERVERSのみです。よく使うネームサーバーを設定しておくと便利です。例えば、Bashシェルの場合、以下のコマンドはlocalhostとポート192.168.0.1:65346およびホストexample.comにあるネームサーバーをrtshellが参照できるようにします。

 $ export RTCTREE_NAMESERVERS=localhost;192.168.0.1:65346;example.com


** 返り値
成功の場合はゼロを返します。失敗の場合はゼロではない値を返します。

デバッグ情報とエラーはstderrに出力されます。

** 例
- ConsoleIn0.rtcのout ポートから出力データを表示します。
 $ rtprint /localhost/ConsoleIn0.rtc:out

- ConsoleIn0.rtcのout ポートから5個のデータを表示します。
 $ rtprint /localhost/ConsoleIn0.rtc:out -n 5

- ConsoleIn0.rtcのout ポートからのデータを5秒間表示します。
 $ rtprint /localhost/ConsoleIn0.rtc:out -t 5

- ConsoleIn0.rtcのout ポートからのデータを5秒間、1秒で10回の頻度で読み、表示しま す。
 $ rtprint /localhost/ConsoleIn0.rtc:out -t 5 -r 10

- ConsoleIn0.rtcのout ポートからの出力データをprintersモジュールのmy_formatter関数に送って結果を表示します。
 $ rtprint /localhost/ConsoleIn0.rtc:out#printers.my_formatter

