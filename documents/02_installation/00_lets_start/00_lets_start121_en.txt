#contents
#br

The latest version OpenRTM-aist-1.2.1-RELEASE installs C++ version, Python version, Java version. #br
Also, rtshell will be installed at the same time.
//最新バージョンOpenRTM-aist-1.2.1-RELEASEではC++版、Python版、Java版、OpenRTPがインストールされます。また、rtshellも同時にインストールされます。

**(G)Advance preparation
***(G)Installation of Python
//**事前準備
//***Python 2.7 のインストール
If Python is not installed, OpenRTM-aist can not be installed. #br
Please install Python before installing OpenRTM - aist. #br
The Python version corresponds to "3.7", "3.6", "2.7".#br
//Python をインストールしていない場合は、OpenRTM-aist をインストールすることができません。#br
//OpenRTM-aist をインストールする前に、Python をインストールしてください。#br
//バージョンは、"3.7"、"3.6"、"2.7"に対応しています。
#br
To download Python please see [[OpenRTM-aist-1.2.1-RELEASE:/ja/node/6877]].
//PythonのダウンロードはOpenRTM-aist-1.2.1-RELEASEをご覧ください。Python のダウンロードは [[OpenRTM-aist-1.2.1-RELEASE:/ja/node/6877]]をご覧ください。


For Python 3.6 or 3.7 installations, check [add python *** to PATH] at the bottom of the first screen.
//Python 3.6または3.7のインストールでは、最初の画面の下部にある[add python *** to PATH]にチェックを入れてください。

When installing, please set [Add python.exe to Path] to [Will be installed on local hard drive] on the following screen. &br;
This will automatically set Path for python.exe and Scripts. (Example: Path=C:\Python27\; C:\Python27\Scripts; ...)
//インストールを実行した際に、以下の画面で [Add python.exe to Path] を [Will be installed on local hard drive] に設定してください。&br;
//こうすると、python.exe と Scripts に Path を自動で設定してくれます。（例：Path=C:\Python27\; C:\Python27\Scripts;...）
#br
&br;

#ref(Python-install001.png,center)
&br;
#br

**(G) Installing OpenRTM-aist
Here, we will introduce the installation procedure using 32-bit installer OpenRTM-aist-1.2.１-RELEASE_x86.msi on Windows 10. #br
//**OpenRTM-aist のインストール
//ここでは Windows10 で 32bit 用インストーラー OpenRTM-aist-1.2.0-RELEASE_x86.msi を使ったインストール手順を紹介します。#br
#br

To download the installer please see [[OpenRTM-aist-1.2.1-RELEASE:/ja/node/6877]].
//インストーラーのダウンロードは [[OpenRTM-aist-1.2.0-RELEASE:/ja/node/6034]] をご覧ください。

''[Installation procedure]''
+ Launch the installer and click [Next].
//''[インストール手順]''
//+インストーラーを起動して [次へ] をクリックします。
&br;
#br

#ref(OpenRTM121-install001.png, center,50%)
//#ref(Openrtm120-Install001.png,center)
&br;
#br

+This is the page of the license agreement. Accept the Software License Terms and click Next.
//+使用承諾契約書のページです。ソフトウェアライセンス条項に同意して [次へ] をクリックします。
&br;
#br

#ref(OpenRTM121-install002.png, center,50%)
//#ref(Openrtm120-Install002.png,center)
&br;
#br

+Select the installation type. Leave the default and click [Next].
//+インストールの種類を選択します。デフォルトのまま [次へ] をクリックします。
&br;
#br

#ref(Openrtm121-Install003.png,center, 50%)
//#ref(Openrtm120-Install003.png,center)
&br;
#br

+Select the version of Visual Studio. #br
Set the version of Visual Studio used in the C++ version to the system environment variable. #br
Select the version of Visual Studio that is installed and click [Next]. #br
//+Visual Studio のバージョンを選択します。#br
//C++版で使用する Visual Studio のバージョンをシステム環境変数に設定します。#br
//インストールされている Visual Studio のバージョンを選択して [次へ] をクリックします。#br
#br
(*) Please refer to [[OpenRTM-aist-1.2.1-RELEASE:/en/node/6877]] for downloading Visual Studio. #br
(*) The setting of the system environment variable RTM_VC_VERSION can be changed with VCVerChanger after the installation is completed. #br
[[((How to use VCVerChanger):/en/node/6136/]] #br
(*) Since it is irrelevant in the Python version and Java version, please click [Next] with default.
//※Visual Studio のダウンロードは [[OpenRTM-aist-1.2.0-RELEASE:/ja/node/6034]] をご覧ください。#br
//※システム環境変数 RTM_VC_VERSION の設定は、インストール終了後に VCVerChanger で変更することができます。#br
//[[( VCVerChangerの使い方 ):/ja/node/6136/]]#br
//※Python版、Java版では無関係ですのでデフォルトのまま [次へ] をクリックしてください。
&br;
#br

#ref(Openrtm121-Install004.png,center,50%)
&br;
#br

+ Select the setup type. #br
OpenRTM-aist a runtime library from Visual Studio 20１０ to 2017 of OpenRTM-aist's C++, Java, Python, OpenRTP, RTSystemEditorRCP, rtshell, OpenRTM-aist-C++ versions of OpenRTM-aist. Runtime libraries from 1.0.0 to 1.2.1 will be installed. If you do not seem to have any particular reason for change, click [Standard].
& br;...
//+セットアップの種類を選択します。#br
//[標準] を選択した場合、OpenRTM-aist の C++版、Java版、Python版、OpenRTP、RTSystemEditorRCP、rtshell、OpenRTM-aist-C++版の Visual Studio 2008 から 2017 までのランタイムライブラリ、OpenRTM-aist-1.0.0 から 1.1.2 までのランタイムライブラリがインストールされます。特に変更理由がないようであれば [標準] をクリックします。
&br;
#br

#ref(Openrtm121-Install005.png,center,50%)
&br;
#br

+Click [Install] to start the installation.
//+[インストール] をクリックするとインストールが開始されます。
&br;
#br

#ref(Openrtm121-Install006.png,center,50%)
&br;
&br;

#ref(Openrtm121-Install007.png,center,50%)
&br;
&br;
#br

+Installation is over. Click [Finish] to exit the installer.
//+インストールが終了しました。[完了] をクリックしてインストーラーを終了します。
&br;
#br

#ref(Openrtm121-Install008.png,center,50%)
&br;
#br

//(*) If the version of Visual Studio you are using is other than 2017 (vc14), change the environment variable RTM_VC_VERSION with reference to the following page. #br
//[[RTM_VC_VERSION change:/en/node/6136/]]
//※使用している Visual Studio のバージョンが 2017(vc14) 以外の場合は、以下のページを参考に環境変数の RTM_VC_VERSION を変更してください。#br
//[[RTM_VC_VERSIONの変更:/ja/node/6136/]]

** (G)Run sample components
Although not required, from here we will launch many applications registered in the start menu. Since it is hard to trace in turn from the start menu every time,
Please display the start menu from the start button, right click on [OpenRTM-aist 1.2.1 x86_64] > [OpenRTP] and select [Open file location].
//**サンプルコンポーネントを実行する
//必須ではありませんが、ここからはスタートメニューに登録されたアプリケーションを多数起動します。毎回スタートメニューから順番にたどるのは大変ですので、
//スタートボタンからスタートメニューを表示させ [OpenRTM-aist 1.2.0 x86] > [OpenRTP] を右クリックして [ファイルの場所を開く] を選択してください。
#br

#ref(Startmenu001.png,center,50%)&br;
CENTER:''Open file location''
//CENTER:''ファイルの場所を開く''
&br;

#ref(Startmenu002.png,center,50%)&br;
CENTER:''Start Menu Folder''
//CENTER:''スタートメニューフォルダー''
&br;
In this way, the folder of the start menu is opened, making it easy to access various applications.
//このように、スタートメニューのフォルダーが開かれ、様々なアプリケーションにアクセスしやすくなります。
//では、インストールされたサンプルコンポーネントを実行してみます。

**** (G)Starting rtm-naming
Click Start Naming Service. The following console screen is displayed.
//**** rtm-naming の起動
//Start Naming Service をクリックします。以下のようなコンソール画面が表示されます。
#br

#ref(StartNameService001.png,center)&br;
CENTER:''Start Naming Service''
&br;
#br

*** (G)Using ConsoleInComp, ConsoleOutComp
ConsoleInComp, ConsoleOutComp is a sample showing how to use DataInPort and DataOutPort. The number entered on the ConsoleIn side is displayed on the ConsoleOut side.
//***ConsoleInComp、ConsoleOutCompを使用する
//ConsoleInComp、ConsoleOutComp は DataInPort、DataOutPort の使用方法を示したサンプルです。ConsoleIn 側で入力した数字が，ConsoleOut 側に表示されます。
#br

**** (G)Starting sample components
ConsoleInComp and ConsoleOutComp are samples that show how to use DataInPort and DataOutPort. The number entered on the ConsoleIn side is displayed on the ConsoleOut side. Here we use these two components to check the operation.
//ConsoleInComp、ConsoleOutCompはDataInPort、DataOutPortの使用方法を示したサンプルです。ConsoleIn側で入力した数字が，ConsoleOut側に表示されます。ここではこの二つのコンポーネントを使用し、動作確認を行います。

Double-click ConsoleIn.bat and ConsoleOut.bat in the [OpenRTM-aist 1.2.1 x86_64]> [C ++ _ Example] folder. If the [Windows Security Alert] screen is displayed, check [Private network (home network, internal network, etc.)] and click [Allow access (A)]. The following console screen is displayed.
//**** サンプルコンポーネント起動
//[OpenRTM-aist 1.2.1 x86_64]>[C++_Example]フォルダー内のConsoleIn.batとConsoleOut.batをダブルクリックします。もし[Windows セキュリティのの重要な警告]画面が表示されたら[プライベートネットワーク(ホームネットワーク社内ネットワークなど)(R)]にチェックマークをつけて[アクセスを許可する(A)]をクリックしてください。以下のようなコンソール画面が表示されます。
#br

CENTER:&ref(ConsoleIn001.png,center);  &ref(ConsoleOut001.png,center);

CENTER:''ConsoleIn.bat and ConsoleOut.bat''
//CENTER:''ConsoleIn.bat と ConsoleOut.bat''
&br;
#br

&aname(openrtp_start);
**** (G)OpenRTP startup
Click on the desktop shortcut to launch it. In the start menu, select [OpenRTM-aist 1.2.1 x86_64]> [OpenRTP]. You can also start it by double-clicking OpenRTP from the folder screen you opened earlier.

Please specify a suitable place for the workspace.
//**** OpenRTP起動
//デスクトップのショートカットをクリックして起動します。スタートメニューでは、[OpenRTM-aist 1.2.1 x86_64]>[OpenRTP]と選択してください。先ほど開いたフォルダー画面からOpenRTPをダブルクリックすることによっても起動できます。
//ワークスペースは適当な場所を指定してください。
#br

#ref(OpenRTP001_en.png,center)&br;
CENTER:''Select Workspace''
//CENTER:''ワークスペースの選択''
&br;
#br

Since the "Welcome" screen is not necessary at the moment, please click the [×] button on the [Welcome] tab in the upper left to close the screen.
//「ようこそ」画面は今のところ必要ないので左上の [ようこそ] タブの [×] ボタンをクリックして画面を閉じてください。
#br

#ref(OpenRTP002_en.png,90%,center)&br;
CENTER:''Screen at initial startup''
//CENTER:''初期起動時の画面''
&br;
#br

** Using RTSystemEditor
//** RTSystemEditorの使用

Click [Open Perspective] in the upper right of the screen. Select [RT System Editor] in the displayed dialog and click [Open] to start RTSystemEditor.
//画面右上の [パースペクティブを開く] をクリックします。表示されるダイアログで [RT System Editor] を選択して [開く] をクリックすると RTSystemEditor が起動します。 
#br

CENTER:&ref(OpenRTP003_en.png,center);  &ref(OpenRTP004_en.png,center);

CENTER:''Switching perspective''
//CENTER:''パースペクティブの切り替え''
&br;
#br


The component is displayed in NameServiceView. Although it is not displayed because it is folded at the beginning, you can check ConsoleIn and ConsoleOut components by clicking [>] and expanding.
//NameServiceView にコンポーネントが表示されます。最初は折りたたまれているため表示されていませんが、[>] をクリックし展開すると、ConsoleIn、ConsoleOut コンポーネントが確認できます。 
#br

#ref(OpenRTP005_en.png,center)&br;
CENTER:''Component activation confirmation''
//CENTER:''コンポーネント起動確認''
&br;
#br

(*) If name server is not displayed in NameServerView, add localhost manually. Click [Add Name Server] in the image to display the dialog. Enter 'localhost' and click OK to add it. If it still does not start, close all console screens and try the procedure from starting Naming Service again.
//※NameServerView にネームサーバーが表示されない時は、手動で localhost を追加します。画像の [ネームサーバを追加] をクリックしてダイアログを表示します。「localhost」 と入力し [OK] をクリックして追加します。 それでも起動されなかった場合は、一度すべてのコンソール画面を閉じてNaming Serviceの起動からの手順をやり直してみてください。
#br

CENTER:&ref(OpenRTP006_en.png,center);  &ref(OpenRTP007_en.png,center);

CENTER: ''Add name server''
//CENTER:''ネームサーバの追加''
&br;
#br


Click Open New System Editor from the toolbar to display SystemDiagram.
//ツールバーから [Open New System Editor] をクリックして、SystemDiagram を表示します。 
#br

#ref(OpenRTP008_en.png,center)&br;
CENTER:''Display SystemDiagram''
//CENTER:''SystemDiagramを表示''
&br;
#br

If you drag and drop the ConsoleIn and ConsoleOut components in the NameServiceView onto the System Diagram, it will look like the image below.
//NameServiceView にある ConsoleIn、ConsoleOut のコンポーネントを System Diagram上にドラッグ＆ドロップすると、以下の画像のように表示されます。 
#br

#ref(OpenRTP009_en.png,center)&br;
CENTER:''Drag and drop component''
//CENTER:''コンポーネントをドラッグ＆ドロップ''
&br;
#br

Drag and drop between data ports to connect the components. After that, a dialog prompting you to enter necessary information for the connection is displayed, and click [OK].
//データポート間でドラッグ＆ドロップしてコンポーネントを接続します。その後、接続に必要な情報の入力を促すダイアログが表示されるので [OK] をクリックします。 
#br

CENTER:&ref(OpenRTP010_en.png,center);  &ref(OpenRTP011_en.png,center);

CENTER:''Component connection''
//CENTER:''コンポーネント接続''
&br;
#br


It is connected as shown in the image below.
//以下の画像のように接続されます。 
#br

#ref(OpenRTP012_en.png,center)&br;
CENTER:''Connection completed''
//CENTER:''接続完了''
&br;
#br

Activate the state of the component. [All Activate] Please click. It will be successful if the color of the component changes from blue to light green. Components can also be individually selected to Activate.(If [All Activate] is not displayed, try restarting Openrtp. Alternatively, you may activate individual components.)
//コンポーネントの状態を Activate にします。[All Activate] クリックしてください。コンポーネントの色が青から明るい緑に変わったら成功です。コンポーネントは個別に選択して Activate にすることも可能です。 ([All Activate]が表示されていない場合は、Openrtpを再起動してみてください。または、コンポーネントを個別にActiveにしても良いです。）
#br

#ref(OpenRTP013_en.png,center)&br;

#ref(OpenRTP014_en.png,center)&br;
CENTER:''Activate complete''
//CENTER:''Activate 完了''
&br;
#br

*** (G)Operation check on the console screen
Next, check the operation on the console screen. After connecting with RTSystemEditor, "Please input number:" will be displayed on the ConsoleIn screen.
//*** コンソール画面での動作確認
//次にコンソール画面で動作確認します。RTSystemEditor で接続後、ConsoleIn 画面に「Please input number:」と表示されます。 
#br

#ref(Console001.png,center)&br;
CENTER:''Please input number:''
//CENTER:''「Please input number:」と表示''
&br;

When entering an arbitrary numerical value on the ConsoleIn screen and pressing [Enter], the numerical value is displayed on the ConsoleOut screen.
//ConsoleIn 画面で任意の数値を入力し [Enter] を押すと、ConsoleOut 画面に数値が表示されます。 

CENTER:&ref(Console002.png,center,90%);  &ref(Console003.png,center,90%);

CENTER:''Check operation''
//CENTER:''動作確認''

(*) If you enter a value other than a number or a number that is too large, the operation may become strange. In that case, stop the operation of the batch file with the Cntrl-C key and try again from the start of the batch file.
//※ 数値以外の入力や、大きすぎる数値を入力すると動作がおかしくなることがあります。その場合はCntrl-Cキーでバッチファイルの動作を停止させ、再度バッチファイルの起動からやり直してください。
&br;&br;

To exit the component, click [All Deactivate] from the toolbar. Then right-click the component and [Exit]. #br
(*) If it takes time to deactivate, please stop entering the numerical value of ConsoleIn, so please enter something.
//コンポーネントを終了する場合は、ツールバーから [All Deactivate] をクリックします。その後、コンポーネントを右クリックして [Exit] してください。 #br
//※Deactivate に時間がかかる場合は ConsoleIn の数値入力で止まっているので、何か数値を入力してください。
#br

#ref(Console004_en.png,center)&br;
CENTER:''Deactivate component''
//CENTER:''コンポーネントの非アクティブ化''

#ref(Console005_en.png,center)&br;
CENTER:''End component''
//CENTER:''コンポーネントの終了''
&br;
Confirmation of operation using ConsoleIn and ConsoleOut is now complete.
//以上で ConsoleIn と ConsoleOut を使用した動作確認は終了です。

#br

** (G)Using rtshell
//** rtshell を利用する

In OpenRTM - aist - 1.2.1, rtshell is installed as a standard.
RTts can be activated, deactivated, terminated, etc. from the command line by using rtshell.
//OpenRTM-aist-1.2.1 では rtshell が標準でインストールされます。
//rtshell を利用することでコマンドラインから RTC のアクティブ化、非アクティブ化、終了等ができるようになります。

(*) When you install 64bit version, it may not be able to operate due to lack of dll. In that case please run Windows Update.
//※64bit版をインストールした場合に dll の不足により動作できない場合があります。その場合は Windows Update を実行してください。

*** (G)RTC operation
Activate the sample component, connect the data port from the command line with rtshell, activate, deactivate, and terminate the RTC.
//*** RTC の操作
//サンプルコンポーネントを起動し、rtshell によりコマンドラインからデータポートの接続、RTC のアクティブ化、非アクティブ化、終了を行います。


**** (G)Start rtm-naming
Click the Start Naming Service in the [OpenRTM-aist 1.2.1 x86] folder to start it.
//**** rtm-naming を起動
//[OpenRTM-aist 1.2.0 x86] フォルダー内の Start Naming Service をクリックして起動します。 

**** (G)Starting sample components
First, start the sample component and operate the started component with rtshell.
Click on ConsoleIn.bat and ConsoleOut.bat in the [OpenRTM-aist 1.2.1 x86] > [Python_Examples] folder to launch the console screen.
If the [Windows Security Alert] screen is displayed, check [Private network (home network, internal network, etc.)] and click [Allow access (A)]. At this point, only the startup command of the py program at startup is displayed on the console screen, and the screen output is different from the case of C ++ Example that was executed earlier.
//**** サンプルコンポーネント の起動
//まずはサンプルコンポーネントを起動して、起動したコンポーネントを rtshell で操作します。
//[OpenRTM-aist 1.2.0 x86] > [Python_Examples] フォルダー内の ConsoleIn.bat と ConsoleOut.bat をクリックするとコンソール画面が起動します。もし[Windows セキュリティのの重要な警告]画面が表示されたら[プライベートネットワーク(ホームネットワーク社内ネットワークなど)(R)]にチェックマークをつけて[アクセスを許可する(A)]をクリックしてください。この時点ではコンソール画面上は起動時のpyプログラムの起動コマンドが表示されるだけで、先に実行したC++ Exampleの場合とは画面が出力が異なります。


**** (G)Operation from command prompt
//**** コマンドプロンプトからの操作

Next, start [Windows system tool] > [command prompt] from the start menu.
//次にスタートメニューから [Windows システム ツール] > [コマンドプロンプト] を起動してください。

#ref(Console006.png,center)&br;
CENTER:''Start Command Prompt''
//CENTER:''コマンドプロンプトの起動''
&br;

First, if you have not set a path in C:\Python27\Scripts, set the path with the following command.
//まず、C:\Python27\Scripts にパスを設定していない場合は以下のコマンドでパスを設定してください。

 set PATH=C:\Python27\Scripts;%PATH%

Next, connect the data port with the following command.
//次に以下のコマンドでデータポートを接続します。

 rtcon /localhost/ConsoleIn0.rtc:out /localhost/ConsoleOut0.rtc:in

Then the following strings are displayed in ConsoleIn.py, ConsoleOut.py console.
//すると ConsoleIn.py、ConsoleOut.py コンソールに以下のような文字列が表示されます。

 ------------------------------
 Listener:        ON_CONNECT
 Profile::name:   outin
 Profile::id:     4d622f80-135f-11e6-b923-001c4231a7a3
 ------------------------------

//#ref(Console007.png,center)&br;
//CENTER:''データポート接続の表示''
//&br;
//#br

#br
Just to be sure, check with RTSystemEditor. ~
By dragging and dropping the NameServiceView component onto the System Diagram, you can confirm that the data port is connected.
//念のため RTSystemEditor で確認します。~
//NameServiceView のコンポーネントをSystem Diagramにドラッグ＆ドロップすると、データポートが接続されたことが確認できます。

#ref(Console007_en.png,center)&br;
CENTER:''Confirm data port connection''
//CENTER:''データポート接続の確認''
&br;
#br

Next, activate RTC with the following command.
//次に、以下のコマンドで RTC をアクティブ化します。

 rtact /localhost/ConsoleIn0.rtc /localhost/ConsoleOut0.rtc
#br

If activation is successful, "Please input number:" will be displayed on the ConsoleIn.py console. Looking at RTSystemEditor, you can confirm that RTC has been activated.
//アクティブ化に成功していると ConsoleIn.py コンソールに「Please input number:」と表示されます。 RTSystemEditor を見ると、RTC がアクティブ化されたことが確認できます。
&br;
#br

#ref(Console008_en.png,center)&br;
CENTER:''Confirm activation''
//CENTER:''アクティブ化の確認''
&br;

Then, enter the value on the ConsoleIn.py screen and press [Enter], the number will be displayed on the ConsoleOut.py screen.
//そして ConsoleIn.py 画面で数値を入力し [Enter] を押すと、ConsoleOut.py 画面に数値が表示されます。 

CENTER:&ref(Console009.png,center);  &ref(Console010.png,center);

CENTER:''ConsoleIn.py and ConsoleOut.py''
//CENTER:''ConsoleIn.py と ConsoleOut.py''
&br;
#br

Deactivate RTC with the following command.
//以下のコマンドで RTC を非アクティブ化してください。

 rtdeact /localhost/ConsoleIn0.rtc /localhost/ConsoleOut0.rtc

(*) If ConsoleIn can not be deactivated, please enter a numerical value because it is stopped by entering a numerical value.
//※ConsoleIn が非アクティブ化できない場合、数値入力で止まっているので何か数値を入力してください。

Finally, please terminate RTC with the following command.
//最後に以下のコマンドで RTC を終了させてください。

 rtexit /localhost/ConsoleIn0.rtc
 rtexit /localhost/ConsoleOut0.rtc

#br

** (G)Next. . .
//** 次は。。。

Please see the link below.
//下記リンク先をご覧ください。

- ''Move the sample further: '' [[sample component:http://www.openrtm.org/openrtm/ja/node/811]]
- ''Create the component: '' [[Case study:http://www.openrtm.org/openrtm/ja/content/%E3%82%B1%E3%83%BC%E3%82%B9%E3%82%B9%E3%82%BF%E3%83%87%E3%82%A3]]
- ''Learn from the basics of OpenRTM: ''[[Developer's Guide:http://www.openrtm.org/openrtm/ja/content/openrtm-aist%E3%83%87%E3%83%99%E3%83%AD%E3%83%83%E3%83%91%E3%83%BC%E3%82%BA%E3%82%AC%E3%82%A4%E3%83%89]]
- ''Join the community: ''[[Community:http://www.openrtm/ja/content/%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%83%86%E3%82%A3]]
- ''Take a look at published components: ''[[Project:http://www.openrtm.org/openrtm/ja/content/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88-0]]
//- ''もっとサンプルを動かしてみる　：　''[[サンプルコンポーネント:http://www.openrtm.org/openrtm/ja/node/811]]
//- ''コンポーネントを作ってみる　：　''[[ケーススタディー:http://www.openrtm.org/openrtm/ja/content/%E3%82%B1%E3%83%BC%E3%82%B9%E3%82%B9%E3%82%BF%E3%83%87%E3%82%A3]]
//- ''OpenRTM の基礎から学ぶ　：　''[[デベロッパーズガイド:http://www.openrtm.org/openrtm/ja/content/openrtm-aist%E3%83%87%E3%83%99%E3%83%AD%E3%83%83%E3%83%91%E3%83%BC%E3%82%BA%E3%82%AC%E3%82%A4%E3%83%89]]
//- ''コミュニティーに参加する　：　''[[コミュニティー:http://www.openrtm.org/openrtm/ja/content/%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%83%86%E3%82%A3]]
//- ''公開されているコンポーネントを見てみる　：　''[[プロジェクト:http://www.openrtm.org/openrtm/ja/content/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88-0]]

#br