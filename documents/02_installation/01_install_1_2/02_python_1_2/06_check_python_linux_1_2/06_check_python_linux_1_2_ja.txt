// Title: 動作確認(Linux編)
インストールが正常に終了したら、付属のサンプルで動作テストをします。サンプルは、通常は以下の場所にあります。
- /usr/share/openrtm-1.2/components/python/<サンプルコンポーネントセット名>

ソースからビルドした場合は、ソースディレクトリ下の
- OpenRTM_aist/examples/&color(blue){<サンプルコンポーネントセット名>};


サンプルコンポーネントセットSimpleIOを使って、OpenRTM-aistが正しくビルド・インストールされているかを確認します。

#contents(5)


**サンプルコンポーネントセットSimpleIO

RTコンポーネントConsoleIn、ConsoleOutからなるサンプルセットです。ConsoleInはコンソールから入力された数値をOutPortから出力するコンポーネント、ConsoleOutはInPortに入力された数値をコンソールに表示するコンポーネントです。これらは、SimpleなI/O(入出力)を例示するためのサンプルです。ConsoleInのOutPortからConsoleOutのInPortへ接続を構成し、これらの2つのコンポーネントをアクティブ化(Activate)することで動作します。

以降、サンプルは/usr/share/openrtm-1.2/components/python/SimpleIO下にあることを前程に説明します。また、Python本体の実行ファイルに対してはサーチパスが設定されているものとします。なお、ソースコードからビルドした場合はサンプル実行ファイルルは&color(blue){<source_dir>};/OpenRTM_aist/examples/SimpleIO/にあるので、起動パスを置き換えて下記の説明を利用してください。


** サンプルを使用した動作確認
*** RTSystemEditorを使った動作確認
以下の説明ではRTSystemEditor(OpenRTP)を使った動作確認を説明します。RaspbianのケースのようにOpenRTPを使用しない環境での動作確認についてはrtshellのインスト―ルの[[動作確認(Linux編)>>//node/6996]]を参照ください。

**** ネームサーバーの起動
以下の手順に従ってRTSystemEditor、ネームサーバーを起動してください。

- [[OpenRTP起動手順:/ja/node/6654]]

**** ConsoleInの起動
- ターミナルを起動してConsoleInを起動します。
 $ python /usr/share/openrtm-1.2/components/python/SimpleIO/ConsoleIn.py
自分でビルド・インストールした場合は、
 $ python <source_dir>/OpenRTM_aist/examples/SimpleIO/ConsoleIn.py
などとしてConsoleInを起動します。

**** ConsoleOutの起動
- 別のターミナルを起動してConsoleOutを起動します。
 $ /usr/share/openrtm-1.2/components/python/SimpleIO/ConsoleOut
自分でビルド・インストールした場合は、同様に
 $ python <source_dir>/OpenRTM_aist/examples/SimpleIO/ConsoleOut.py
などとしてConsoleOutを起動します。

**** System Diagramへの配置
- RTSystem Editorのツリー表示の[>]をクリックすると、先ほど起動した2つのコンポーネントが登録されていることがわかります。
#ref(rtm10.png,/ja/node/6614,60%,center)
CENTER:''ConsoleInコンポーネントとConsoleOutコンポーネント''
- システムを編集するSystem Diagramを開きます。上部のエディタを[Open New System Editor]ボタン&ref(rtse_open_editor_icon_ja.png,150%);をクリックすると、中央のペインにSystem Diagramが開きます。
- 左側のネームサービスビューに&ref(rtse_rtc_icon_n.png,150%);のアイコンで表示されているコンポーネント(2つ)を中央のSystem Diagramにドラッグアンドドロップします。
#ref(rtm11.png,/ja/node/6614,80%,center)
CENTER: ''コンポーネントをSystem Diagramに配置''

**** 接続とアクティブ化
- ConsoleIn0コンポーネントの右側にはデータが出力されるOutPort&ref(rtse_outport_icon_n.png,200%);、ConsoleOut0コンポーネントの左側にはデータが入力されるInPort&ref(rtse_inport_icon_n.png, 200%);がそれぞれついています。
#ref(rtm13.png,80%,center)
CENTER: ''データポートの接続''
- これらInPort/OutPort(まとめてデータポートと呼びます)を接続します。
OutPortからInPort(またはInPortからOutPort)へドラッグランドドロップすると、図のようなダイアログが現れますので、デフォルト設定のまま[OK]ボタンをクリックします。
#ref(rtm12.png,80%,center)
CENTER: ''データポート接続ダイアログ''
- 2つのコンポーネントの間に接続線が現れます。次に、エディタ上部メニューの[All Activate]ボタン&ref(rtm14.png);をクリックし、これらのコンポーネントをアクティブ化します。
- アクティブ化されると、コンポーネントが緑色に変化します。
#ref(rtm15.png,/ja/node/6614,center)
CENTER: ''アクティブ化されたコンポーネント''
- コンポーネントがアクティブ化されるとConsoleInコンポーネント側では
 Please input number: 
というプロンプト表示に変わりますので、適当な数値(short intの範囲内:32767以下)を入力しEnterキーを押します。すると、ConsoleOut側でも入力した数値が表示され、ConsoleInコンポーネントからConsoleOutコンポーネントへデータが転送されたことがわかります。

以上で、RTSystemEditorを用いたコンポーネントの基本動作の確認は終了です。
