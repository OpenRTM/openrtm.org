// Title: 動作確認 (Windows編)

#contents


** サンプルコンポーネントを実行する

インストールが正常に終了したら、付属のサンプルコンポーネントで動作を確認できます。
batファイルを用意していますので、それをダブルクリックすれば起動できます。

batファイルは、スタートメニューの [OpenRTM-aist 2.0.0 x86_64] からスタートメニューフォルダーを開くとアクセスしやすいです。&br;
「C++_Examples」「C++_OpenCV-Examples」「Python_Examples」「Java_Examples」の各フォルダ下にbatファイルがあります。
詳細は、10分で始めようページの解説をご覧ください。 &br;
- [[OpenRTM-aistを10分で始めよう！・サンプルコンポーネントを実行する:/ja/doc/installation/lets_start#toc5]] 
&br;
#ref(start-menu-folder.png,center,90%)&br;
CENTER:''スタートメニューフォルダー''
&br;


サンプルコンポーネントのインストール先は以下です。

 C:\Program Files\OpenRTM-aist\2.0.x\Components\C++\Examples
 C:\Program Files\OpenRTM-aist\2.0.x\Components\Python
 C:\Program Files\OpenRTM-aist\2.0.x\Components\Java
 C:\Program Files\OpenRTM-aist\2.0.x\Components\C++\OpenCV


** サンプルコンポーネント一覧

付属しているサンプルコンポーネントの簡単な説明と、使い方を解説しているページへのリンクを以下に示します。

*** C++版、Python版、Java版に付属

|LEFT:30|LEFT:80|LEFT:10|c
|batファイル名|サンプルコンポーネントの簡単な説明|使い方解説ページ|
|ConsoleIn.bat &br;ConsoleOut.bat |''ConsoleIn.bat'' : コンソールから入力された数値をOutPortから出力する&color(default){ConsoleInコンポーネント}; を起動します。&br; ''ConsoleOut.bat'' : InPortに入力された数値をコンソールに表示する&color(default){ConsoleOutコンポーネント};  を起動します。|[[SimpleIO:/ja/doc/installation/sample_components/simpleio]]|
|SeqIn.bat &br; SeqOut.bat|''SeqIn.bat'' : ランダムな数値(Short、Long、Float、Doubleとそのシーケンス型)を出力する&color(default){SeqInコンポーネント};を起動します。&br; ''SeqOut.bat'' : InPortに入力される数値(Short、Long、Float、Doubleとそのシーケンス型)を表示する&color(default){SeqOut};を起動します。|[[SeqIO:/ja/doc/installation/sample_components/seqio]]|
|MyServiceProvider.bat &br;MyServiceConsumer.bat|''MyServiceProvider.bat'' : MyService型のサービスを提供する&color(default){MyServiceProviderコンポーネント}; を起動します。&br; ''MyServiceConsumer.bat'' : MyService型のサービスを提供する&color(default){MyServiceConsumerコンポーネント}; を起動します。|[[SimpleService:/ja/doc/installation/sample_components/simpleservice]]|
|ConfigSample.bat|Configuration機能の使用例のサンプル&color(default){ConfigSampleコンポーネント}; を起動します。RtcLinkからConfigurationを変更してConfigurationの挙動を理解するためのサンプルです。|[[ConfigSample:/ja/doc/installation/sample_components/configsample]]|
|Composite.bat|複合コンポーネント作成サンプル&color(default){PeriodicECSharedComponentコンポーネント}; を起動します。Sensor、Controller、Motorの3つサブ・コンポネントを複合しています。 ConsoleInなどのコンポーネント接続して使ってみると良いでしょう。|[[Composite:/ja/doc/installation/sample_components/composite]]|

*** Python版のみに付属

|LEFT:30|LEFT:80|LEFT:10|c
|batファイル名|サンプルコンポーネントの簡単な説明|使い方解説ページ|
|TkJoystickComp.bat|Tcl/Tkを用いたGUIコンポーネントのサンプル。簡易ジョイスティックコンポーネント。|[[TkJoyStick:/ja/doc/installation/sample_components/tkjoystick_mobilerobotsimulator#toc0]]|
|TkMobileRobotSimulator.bat|モバイルロボットの簡易シミュレーター。ロボットの速度をInPortで受け、移動後の位置をOutPortから出力する。|[[TkMobileRobotSimulator:/ja/doc/installation/sample_components/tkjoystick_mobilerobotsimulator#toc4]]|
|TkMotorComp.bat|Tcl/Tkを用いたGUIコンポーネントのサンプル。InPortで受け取った値の速度で回転する様子をGUIで表示する。|[[TkMotorComp:/ja/doc/installation/sample_components/tkmotorcomp_slidercomp#toc0]]|
|SliderComp.bat|Tcl/Tkを用いたGUIコンポーネントのサンプル。Sliderで指定した値をOutPortから出力する。|[[SliderComp:/ja/doc/installation/sample_components/tkmotorcomp_slidercomp#toc3]]|
|TkMotorPosComp.bat|Tcl/TKを用いたGUIコンポーネントのサンプル。InPortで受け取った値を回転角として動く様子をGUIで表示する。|[[TkMotorPosComp:/ja/doc/installation/sample_components/tkmotorposcomp_slidercomp]]|
|TkLRFViewer.bat|Tcl/Tkを用いたGUIコンポーネントのサンプル。レーザーレンジセンサーなどから出力されるデータを表示する。|[[tkLRFViewer:/ja/doc/installation/sample_components/tklrfviewer]]|
|AutoControl.bat|モバイルロボット用のコンポーネントで速度を出力する。測位センサーのデータをInPortで受け、ロボットの速度を計算してOutPortから出力する。|[[Autocontrol:/ja/doc/installation/sample_components/autocontrol]]|

*** Python版、Java版に付属

|LEFT:30|LEFT:80|LEFT:10|c
|batファイル名|サンプルコンポーネントの簡単な説明|使い方解説ページ|
|ExtConsoleIn.bat &br; ExtConsoleOut.bat &br; ExtConnector.bat|''ExtConsoleIn.bat'' : 外部からのトリガで制御されるコンソール入力された数値をOutportから出力するコンポーネントを起動します。&br; ''ExtConsoleOut.bat'' : 外部からのトリガで制御されるInportに入力された数値をコンソールに出力するコンポーネントを起動します。&br; ''ExtConnector.bat'' : ExtTrigger/ConsoleInComp.class or .pyとExtTrigger/ConsoleOutComp.class or .pyへの外部トリガー送るプログラムを起動します。|[[ExtTrigger:/ja/doc/installation/sample_components/exttrigger]]|

*** Java版のみに付属

|LEFT:30|LEFT:80|LEFT:10|c
|batファイル名|サンプルコンポーネントの簡単な説明|使い方解説ページ|
|GUIIn.bat|スライダーの位置をOutportから出力するGUIのサンプルを起動します。ConsoleOutComp.classと接続することもできます。|[[GUIIn:/ja/doc/installation/sample_components/guiin]]|

*** OpenCV C++版

|LEFT:30|LEFT:80|LEFT:10|c
|batファイル名|サンプルコンポーネントの簡単な説明|使い方解説ページ|
|Affine.bat               |入力画像のアフィン変換をします。||
|BackgroundSubtractionSimple.bat|入力画像においてKey入力があった時点の画像から変化分を出力します。||
|Binarization.bat      |入力画像を二値化した白黒画像に変換します。||
|CameraViewer.bat|InPort で受け取った画像を画面に表示します。|[[CameraViewer:/ja/doc/installation/sample_components/opencvcamera]]|
|Chromakey.bat|画像から特定の色を除去し物体を抽出します。|[[Chromakey:/ja/doc/installation/sample_components/chromakey]]|
|DialationErosion.bat|ダイアレーション/エロージョン処理を行います。||
|Edge.bat     |X方向一次微分画像、Y方向一次微分画像、ラプラシアン画像(二次微分画像)を出力します||
|Findcontour.bat|輪郭抽出をして、輪郭を画像中に表示します。||
|Flip|画像の反転を行います。|[[Flip使用例:/ja/doc/installation/sample_components/opencvcamera]]|
|Histgram.bat          |白黒化した画像の明度/コントラストの変更処理をしながら、ヒストグラムの変化を表示します。||
|Hough.bat|ハフ変換による直線抽出||
|ImageCalibration.bat|カメラキャリブレーションを行います。|[[TkCalibGUIから自動起動:/ja/doc/installation/sample_components/tkcalibgui]]|
|ImageSubtraction.bat|入力画像から背景画像を取り出し、前景画像部を判定し、それを取り出すマスク画像を、背景画像を出力します。|[[ImageSubtraction:/ja/doc/installation/sample_components/imagesubtraction]]|
|ObjectTracking.bat|画面上から選択したオブジェクトを追跡して、その位置を赤い楕円形で囲んで示します。|[[ObjectTracking:/ja/doc/installation/sample_components/objecttracking]]|
|OpenCVCamera.bat|USBカメラのキャプチャ画像を OutPort から出力します。|[[OpenCVCamera:/ja/doc/installation/sample_components/opencvcamera]]|
|Perspective.bat      |画像のパースペクティブ変換(斜め下から見たように変換します。||
|RockPaperScissors.bat|画像でグーチョキパーを判定します。||
|Rotate.bat             |画像を回転と縮小拡大処理をします。||
|Scale.bat|画像の縮小拡大処理をします。||
|Sepia.bat|画像のセピア化を行います。||
|SubtractCaptureImage.bat|入力画像から変化のない部分を背景と判断して、前景(移動物)を取り出すマスク画像を出力します。|[[SubtractCaptureImage:/ja/doc/installation/sample_components/substractcaptureimage]]|
|Template.bat|テンプレートマッチング||
|TkCalibGUI.bat|カメラキャリブレーションを行う ImageCalibrationコンポーネント用のGUIです。|[[TkCalibGUI:/ja/doc/installation/sample_components/tkcalibgui]]|
|Translate.bat|画像の2次元移動処理をします。||





